// -----------------------------------------------------------------------------
// This file contains all mixins.
// -----------------------------------------------------------------------------
/* This is a mixin that will be used to create a breakpoint for the desktop. */
@mixin desktop-breakpoint {
	@media screen and (min-width: map-get($breakpoints, desktop)) {
		@content;
	}
}

@mixin no-margin {
	margin: 0;
}

/* Creating a filter that will recolor the image to the specified color. */
@mixin recolor($color: #000, $opacity: 1) {
	$r: calc(red($color) / 255);
	$g: calc(green($color) / 255);
	$b: calc(blue($color) / 255);
	$a: $opacity;

	// grayscale fallback if SVG from data url is not supported
	$lightness: lightness($color);

	// color filter
	$svg-filter-id: 'recolor';
	filter: saturate(0%) brightness(0%) invert($lightness) opacity($opacity);
	filter: url('data:image/svg+xml;utf8,\
    <svg xmlns="http://www.w3.org/2000/svg">\
      <filter id="#{$svg-filter-id}" color-interpolation-filters="sRGB">\
        <feColorMatrix type="matrix" values="\
          0 0 0 0 #{$r}\
          0 0 0 0 #{$g}\
          0 0 0 0 #{$b}\
          0 0 0 #{$a} 0\
        "/>\
      </filter>\
    </svg>\
    ##{$svg-filter-id}');
}



@mixin body-position {
  max-width: $wmax;
  min-width: $wmin;
  margin: auto;
}

@mixin linear-gradient {
  background: linear-gradient(rgba(255, 255, 255, 0) 0%, #00000080);
}

@mixin WH-full {
  width: 100%;
  height: 100%;
}

@mixin font-right($size) {
  font-size: $size;
  font-style: normal;
  font-weight: 500;
  text-align: right;
  line-height: 142.6%;
}

@mixin font($size, $weight) {
  font-size: ($size);
  font-style: normal;
  font-weight: $weight;
  line-height: 142.6%;
}

@mixin bkgrd($background) {
  background: $background;
  background-blend-mode: darken;
  background-repeat: no-repeat;
  background-size: cover;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-start {
  display: flex;
  align-items: center;
  justify-content: flex-start
}

@mixin flex-end {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

@mixin flex-banner {
  position: relative;
  @include flex-center;
  width: 100%;
  @include bkgrd($banner-background);
  margin-top: 20px;
}

@mixin rightArrow-style {
  display: flex;
  position: absolute;
  font-size: 1.5rem;
  top: 42%;
  right: 2%;
  width: 12px;
  height: 20px;
  z-index: 10;
  cursor: pointer;
  color: $tertiary-color;

  @media screen and (min-width: $breakpoint-desktop) {
    width: 47px;
    height: 79px;
    top: 42%;
    font-size: 4.5rem;
  }
}

@mixin leftArrow-style {
  display: flex;
  position: absolute;
  font-size: 1.5rem;
  top: 42%;
  left: 2%;
  height: 20px;
  width: 12px;
  z-index: 10;
  cursor: pointer;
  color: $tertiary-color;

  @media screen and (min-width: $breakpoint-desktop) {
    width: 47px;
    height: 79px;
    top: 42%;
    font-size: 4.5rem;
  }
}

@mixin media-query($key) {
  $size: map-get($breakpoints, $key);
  @media only screen and (min-width: $size) {
    @content;
  }
}